name: Commit Logger

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

permissions:
  contents: write
  actions: read

jobs:
  report:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate metrics (since last completed run)
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const fs = require('fs');
            const path = '.github/data/commit.csv';

            const { data } = await github.request(
              'GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs',
              { owner, repo, workflow_id: 'commit.yml', per_page: 1, status: 'completed' }
            );
            const lastRun = data.workflow_runs?.[0];
            const sinceDate = lastRun ? new Date(lastRun.created_at) : new Date(0);
            core.info(`Since: ${sinceDate.toISOString()}`);

            const commitsResp = await github.request(
              'GET /repos/{owner}/{repo}/commits',
              { owner, repo, since: sinceDate.toISOString(), per_page: 100 }
            );

            const rows = (commitsResp.data || []).map(c => ({
              date: c.commit?.author?.date ?? c.commit?.committer?.date ?? new Date().toISOString(),
              message: (c.commit?.message ?? '').replace(/\r?\n/g, ' ')
            }));

            if (!rows.length) {
              core.info('No new commits since last completed run; leaving CSV unchanged.');
              // ensure dir exists so git add doesn't fail on first run with no file
              fs.mkdirSync('.github/data', { recursive: true });
              if (!fs.existsSync(path)) {
                fs.writeFileSync(path, 'Date,Message\n', 'utf8');
              }
              return;
            }

            const esc = s => `"${String(s).replace(/"/g, '""')}"`;
            const newLines = rows.map(r => `${esc(r.date)},${esc(r.message)}`).join('\n');

            // 3) Append (create file with header if missing)
            fs.mkdirSync('.github/data', { recursive: true });
            if (!fs.existsSync(path)) {
              fs.writeFileSync(path, 'Date,Message\n', 'utf8');
            }
            fs.appendFileSync(path, (fs.readFileSync(path, 'utf8').endsWith('\n') ? '' : '\n') + newLines + '\n', 'utf8');

      - name: Commit data
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .github/data/commit.csv
          git commit -m 'Update commit data' || echo "No changes to commit"
          git push
